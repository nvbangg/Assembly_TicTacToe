.model small
.stack 100h
.data
    ki_tu db '123456789'
    ; Dòng bảng có 11 ký tự vẽ bảng, căn giữa 80 cột => (80-11)/2=34 khoảng trắng trước
    bang db 13,10, '                                  ', '   |   |   ',13,10  ; row 1
         db        '                                  ', '-----------',13,10  ; sep 1
         db        '                                  ', '   |   |   ',13,10  ; row 2
         db        '                                  ', '-----------',13,10  ; sep 2
         db        '                                  ', '   |   |   ',13,10,'$' ; row 3
    pos dw 36, 40, 44, 130, 134, 138, 224, 228, 232
    ; Các chuỗi thông báo căn giữa màn hình 80 cột (đã có khoảng trắng phía trước)
    msg_turn_x db 13,10, '                            Nhap vi tri (1-9). Luot X: $'
    msg_turn_o db 13,10, '                            Nhap vi tri (1-9). Luot O: $'
    msg_invalid db 13,10, '                            Khong hop le! Thu lai.$'
    msg_x_win db 13,10, '                            NGUOI THANG: X$'
    msg_o_win db 13,10, '                            NGUOI THANG: O$'
    msg_hoa   db 13,10, '                            HOA VAN$'
    msg_replay db 13,10, '                            Choi lai? (Y/N): $'
    turn db 'X'
    turn_begin db 'O'
    res db ' ', '$'
    mang_win dw 1,2,3, 4,5,6, 7,8,9, 1,4,7, 2,5,8, 3,6,9, 1,5,9, 3,5,7

.code
main proc
    mov ax, @data
    mov ds, ax
    call init

game_loop:
    call ve_bang
    call nhap_nuoc
    call check_end
    cmp al, 1
    je game_over
    call doi_luot
    jmp game_loop

game_over:
    call ve_bang
    mov al, res
    cmp al, 'X'
    je hien_kq_x
    cmp al, 'O'
    je hien_kq_o
    cmp al, 'H'
    je hien_kq_hoa
    jmp ket_thuc

hien_kq_x:
    mov ah, 9
    lea dx, msg_x_win
    int 21h
    jmp ket_thuc

hien_kq_o:
    mov ah, 9
    lea dx, msg_o_win
    int 21h
    jmp ket_thuc

hien_kq_hoa:
    mov ah, 9
    lea dx, msg_hoa
    int 21h

ket_thuc:
    mov ah, 9
    lea dx, msg_replay
    int 21h
    mov ah, 1
    int 21h
    and al, 0dfh   ; chuyển sang chữ hoa
    cmp al, 'Y'
    jne exit
    call init
    jmp game_loop

exit:
    mov ah, 4ch
    int 21h
main endp

init proc
    lea si, ki_tu
    mov bl, '1'
    mov cx, 9
reset:
    mov [si], bl
    inc bl
    inc si
    loop reset
    mov al, 'X' + 'O'
    sub al, turn_begin
    mov turn_begin, al
    mov turn, al
    mov res, ' '
    ret
init endp

ve_bang proc
    mov ax, 3       ; chế độ text 80x25 color
    int 10h

    mov cx, 9
    mov si, 0
update_cell:
    mov bx, si
    add bx, bx      ; bx = si*2 vì pos là word
    mov di, pos[bx]
    mov al, ki_tu[si]
    mov bang[di], al
    inc si
    loop update_cell

    mov ah, 9
    lea dx, bang
    int 21h
    ret
ve_bang endp

nhap_nuoc proc
    mov ah, 9
    cmp turn, 'X'
    je hien_nhap_x
    lea dx, msg_turn_o
    jmp xuat_nhap

hien_nhap_x:
    lea dx, msg_turn_x

xuat_nhap:
    int 21h
    mov ah, 1
    int 21h
    cmp al, '1'
    jl nhap_sai
    cmp al, '9'
    jg nhap_sai
    sub al, '1'
    mov bl, al
    mov bh, 0
    lea si, ki_tu
    add si, bx
    mov al, [si]
    cmp al, 'X'
    je nhap_sai
    cmp al, 'O'
    je nhap_sai
    mov al, turn
    mov [si], al
    ret

nhap_sai:
    mov ah, 9
    lea dx, msg_invalid
    int 21h
    jmp nhap_nuoc
nhap_nuoc endp

doi_luot proc
    mov al, 'X' + 'O'
    sub al, turn
    mov turn, al
    ret
doi_luot endp

check_end proc
    mov si, 0
    mov cx, 8
check_win:
    mov bx, mang_win[si]
    mov ah, ki_tu[bx-1]
    mov bx, mang_win[si+2]
    cmp ah, ki_tu[bx-1]
    jnz chua_win
    mov bx, mang_win[si+4]
    cmp ah, ki_tu[bx-1]
    jnz chua_win
    mov res, ah
    mov al, 1
    ret
chua_win:
    add si, 6
    loop check_win

    lea si, ki_tu
    mov cx, 9
check_hoa:
    mov al, [si]
    cmp al, '9'
    jbe chua_hoa
    inc si
    loop check_hoa

    mov res, 'H'
    mov al, 1
    ret
chua_hoa:
    mov al, 0
    ret
check_end endp

end main
